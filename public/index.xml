<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualization in R</title>
    <link>/</link>
    <description>Recent content on Visualization in R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting Started</title>
      <link>/rtopic/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/getting-started/</guid>
      <description>Getting Started in R Why R? Perhaps the best place to start is to ask ourselves why we are choosing to use R. Fortunately, Rob Schlegel (WHOI) sums up nicely why using R is a good idea for data science as part of his R workshop:
https://robwschlegel.github.io/Intro_R_Workshop/prelim.html#why-use-r
Dan Kelley (Dalhousie) has a nice book on oceanographic analysis in R (in classroom) - his sub-chapter on “Why R, and Why Now?</description>
    </item>
    
    <item>
      <title>Self Assessment</title>
      <link>/rtopic/self-assessment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/self-assessment/</guid>
      <description>Instructions The following is a self-assessment of your current level of skills in R. Please create a new script to complete the following exercises. If you are new to R, you will likely only get to somewhere in Task 1. Otherwise, go on as far as you can. Let Ben know when you’ve gone as far as you can so he can check you off. This is not a test, just data gathering.</description>
    </item>
    
    <item>
      <title>Plotting I - Initial Tools</title>
      <link>/rtopic/plotting-i-initial-tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/plotting-i-initial-tools/</guid>
      <description>Data for this exercise can be found here.
In this class, we will begin plotting data using ggplot. ggplot is a powerful tool for producing elegant graphics and is relatively simple to use once you’ve mastered a few key ideas. We’re going to be using this tool to experiment with visualizing data from a SEA Semester cruise across the South Pacific undertaken in 2014 (S258). We’re going to be using a subset of the neuston net data (surface tow) from that cruise.</description>
    </item>
    
    <item>
      <title>Plotting II - Changing Aesthetics</title>
      <link>/rtopic/plotting-ii-changing-aesthetics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/plotting-ii-changing-aesthetics/</guid>
      <description>Data for this exercise can be found here.
In this class, we will continue to practice plotting data using ggplot and extend what we know to include how we format our plots to look nice for publication. We will be plotting data from a previous SEA cruise (S258)
Prerequisites Before this class, you should have worked through chapter 28 of R for Data Science by Garrett Grolemund and Hadley Wickham.</description>
    </item>
    
    <item>
      <title>Climate Data</title>
      <link>/rtopic/climate-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/climate-data/</guid>
      <description>Atmospheric CO2 (recent) Surface Temperature Paleo Records Upper Ocean Temperature Sea Ice Ocean Acidification Ice Mass Balance Sea Level Rise   Below are links to some preformatted data set related to the presentations you gave last Friday about our changing climate. I have taken the raw data files and made them neat for plotting. If you feel confident with the plotting you should try and work up the data from the raw version.</description>
    </item>
    
    <item>
      <title>Plotting III - Themes</title>
      <link>/rtopic/plotting-iii-themes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/plotting-iii-themes/</guid>
      <description>The data for this exercise is available here
Prerequisites To complete the exercises contained below, you will need to load the group of packages in the tidyverse and also the lubridate package:
library(tidyverse) library(lubridate)  Reading in the data I’m going to be using the hourly data from S258. This is the hour-by-hour record from our underway sensors. On my computer, loading that data looks like this
df &amp;lt;- read_csv(&amp;quot;~/Documents/SEA/S285_OC/dcv/R/classes/data/S258_hourly.</description>
    </item>
    
    <item>
      <title>S285 Plots</title>
      <link>/rtopic/s285-plots/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/s285-plots/</guid>
      <description>Initial data work # load in the libraries we will use library(oce) library(S285) library(tidyverse) # setting all negative longitudes to +360 S285$elg$lon[S285$elg$lon&amp;lt;0] &amp;lt;- S285$elg$lon[S285$elg$lon&amp;lt;0] + 360 # setting all salinities less than 30 to NA S285$elg$sal[S285$elg$sal&amp;lt;30] &amp;lt;- NA # setting plotting parameters lonlim &amp;lt;- c(169,210) latlim &amp;lt;- c(-48,-15) # making lon labels lonbreaks &amp;lt;- pretty(lonlim) lonlab &amp;lt;- lonbreaks lonlab[lonlab&amp;gt;180] &amp;lt;- lonlab[lonlab&amp;gt;180] - 360 lonlab &amp;lt;- paste0(abs(lonlab), &amp;quot;°&amp;quot;, ifelse(lonlab &amp;lt; 0,&amp;quot;W&amp;quot;,&amp;quot;E&amp;quot;)) # making lat labels latbreaks &amp;lt;- pretty(latlim) latlab &amp;lt;- paste0(abs(latbreaks), &amp;quot;°&amp;quot;, ifelse(latbreaks &amp;lt; 0,&amp;quot;S&amp;quot;,&amp;quot;N&amp;quot;)) # creating function to format plot aesthetics set_aesthetics &amp;lt;- function() { g &amp;lt;- theme_classic() + theme(panel.</description>
    </item>
    
    <item>
      <title>Previous Cruise Data</title>
      <link>/rtopic/previous-cruise-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/previous-cruise-data/</guid>
      <description>Previous Cruise Data I have compiled the (albeit not fully quality controlled) data from past four trips along our cruise track into a package which you can download and load into your R session. The data is on my github page in a package called seapacific. To download this data you need to install the development tools package called devtools
install.packages(&amp;quot;devtools&amp;quot;) You can then install the seapacific on your computer by running</description>
    </item>
    
    <item>
      <title>R Questions (Feb 20)</title>
      <link>/rtopic/r-questions-feb-20/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/r-questions-feb-20/</guid>
      <description>Some questions from today that Farley sent along to me. I’ll attempt to answer some of them
Why does R hate secondary Y-axis? Because I do. And so should everyone else.
All joking aside, secondary axes are:
 Clunky and hard to interpret They almost always require color to distinguish the axes which make black and white reproductions hard to interpret They often have weird things going on with grid lines unaligned to ticks on at least one end  Typically, out goal with secondary axes is to show how things co-vary.</description>
    </item>
    
    <item>
      <title>Leaflet and Shiny</title>
      <link>/rtopic/leaflet-and-shiny/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/leaflet-and-shiny/</guid>
      <description>Objectives There are a lot of ways to visualise data, with more and more different options being added every day. It can be hard to tell when getting started which of these options are worth us investing our time in, and which are just passing gimmicks. Some of the important ways we measure the use of a tool is the clarity with which it allows us to communicate, the interactiveness that it offers users, or by simply standing the test of time.</description>
    </item>
    
    <item>
      <title>Previous Pacific Cruise Data</title>
      <link>/rtopic/previous-pacific-cruise-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/previous-pacific-cruise-data/</guid>
      <description>I’ve compiled all of the previous data from our cruise track into one R package that you can download and access. This page will walk you through that data so you can access and investigate.
Getting the data To start, you will need to install devtools which are a selection of developer tools that can be used for lots of things. In our case, accessing a package stored on GitHub rather than the standard R package repository (CRAN).</description>
    </item>
    
    <item>
      <title>Plotting IV - Maps</title>
      <link>/rtopic/plotting-iv-maps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rtopic/plotting-iv-maps/</guid>
      <description>The data for this exercise is available here
Prerequisites This will be a walk through of how to plot data on a map. We’ll be using the hourly location data to plot a cruise track.
Before we can get going, we need to load our tidyverse library and read in our data like in previous tutorials.
library(tidyverse) df &amp;lt;- read_csv(&amp;quot;~/Documents/SEA/S285_OC/dcv/R/classes/data/S258_hourly.csv&amp;quot;)  Mapping An initial map of the location data can be acheived by a simple ggplot figure such as the following, where our x and y aesthetics ar lon and lat and we plot each location as a point.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>A site with a bunch of resources for students to discover data visualization in R.</description>
    </item>
    
  </channel>
</rss>